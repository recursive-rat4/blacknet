// Auto-generated with rings.sage

#ifndef BLACKNET_CRYPTO_FERMAT_H
#define BLACKNET_CRYPTO_FERMAT_H

#include <array>

#include "integerring.h"

namespace blacknet::crypto {

struct FermatRingParams {
    using I = int32_t;
    using L = int64_t;
    using UI = uint32_t;
    using UL = uint64_t;

    constexpr static const std::size_t BITS = 17;
    constexpr static const I M = 65537;
    constexpr static const I R2 = 1;
    constexpr static const I RN = -65535;
    constexpr static const std::array<I, 1024> TWIDDLES = {1, -256, 4096, 16, -64, 16384, 4, -1024, -2048, -8, 128, -32768, -2, 512, -8192, -32, 510, 514, -8224, 8160, -32640, 32641, 2040, 2056, 4112, -4080, -257, 255, -1020, -1028, 16448, -16320, -9589, 29915, -19881, -22350, 23863, -13987, 27181, -11414, -22828, 11175, 17811, 27974, 19178, 5707, -25775, -20837, 24885, -13471, 18925, 4938, -19752, 10163, -31534, 11653, 23306, -2469, -26033, -20326, 15767, 26942, 27687, -9876, -564, 13310, -16349, -9024, -29441, 141, -2256, -12297, -24594, 4512, -6655, -282, 1128, -26620, 32698, 18048, -25492, -27748, -14791, -14650, -6937, 6373, 29106, 20082, -25373, 7325, 13874, -12746, -14553, -10041, 29582, 29300, -31375, -29051, 6057, 22296, -23647, 24228, 5574, 14870, 29740, -11148, -18243, 17081, -2787, -7435, -12114, 20945, -10222, -4648, 8831, -32478, -1162, -30213, 24649, -18592, 28353, 16239, 2324, -5111, 20444, 9296, -17662, -581, 6255, -28392, -4487, -30994, -7098, -17948, 25020, 17506, -30525, 15497, 14196, -29641, -12510, -8753, 8974, -3549, -21263, 3757, 5425, -12523, -15445, 21700, -19515, 15028, 30056, -26507, 30890, 22137, -23011, -7514, -10850, 25046, -12840, 10190, -31966, -8829, -30221, 3210, 14177, -24777, 15983, -28354, -5095, -6420, 25680, -20380, -1605, 17658, 5300, 19477, 16053, 19263, -11515, -1325, 21200, 12371, 24742, 23137, 23030, 2650, -10600, 26583, -32106, 27011, 11178, 22060, -25275, -17763, 5515, 29974, -20825, 22703, -20131, -23887, -11030, 5589, -22356, 21417, -14987, -30011, -939, -21764, 20539, -15024, -5441, 16619, -3756, -21519, 22499, 7512, 10882, 32299, 1878, -22009, 24459, 30048, 32690, 20096, 6149, -1256, 5024, 24596, -314, 14847, 29694, 628, -10048, 16345, 157, 25345, -12298, 2512, 25502, 25188, -9786, 14810, 6297, 26393, -29066, -30322, 4893, -7405, -12594, 12751, 14533, 15161, 19572, -29620, 1089, -16636, 4028, 17424, -4159, 16112, 4356, -1007, -2014, -8712, 8318, -32224, -2178, -32265, -8056, 30689, 31094, -30087, 22633, -26792, -23906, 24995, -6698, 10726, 21452, 13396, -17725, 15547, 3349, -5363, 20271, -11953, -22038, 5546, -23199, -24923, -31382, -27259, -22615, 22184, -21169, -20307, -2773, -11019, -21461, -11092, -19139, -15691, -32553, 10369, 30707, 3448, -13792, -8246, 862, -24061, 17415, -1724, 27584, 16492, -431, -20738, 4123, -6896, -24363, 10913, 22003, 3414, -13656, 22475, -31915, -21885, 21767, -1707, 27312, 20587, -16811, -21826, 21531, -6828, 26900, -5015, 14703, -28359, -17638, -6725, -23474, -20060, 25417, -18589, -30261, 13450, 11737, 10030, -29406, -8819, -22598, 17832, -23164, 31654, 4458, -27119, -24855, 5791, 11582, -15827, -8916, -11299, -20341, 29873, -19209, 2229, 9532, -15323, -16980, 21438, -20215, -2383, -27409, 4245, 8490, -10719, -25107, 4766, -19064, 30646, -31577, 22661, -4153, 14576, 28932, -911, 3644, -15346, -16612, -7233, -14466, -32313, -7288, 30692, 8306, -29152, 7673, 1822, -20846, 28079, 9495, -5851, 23404, -27557, -17847, -18758, 28021, -29843, 18729, -10423, -23845, 9379, -18990, 11702, -23379, 21157, -10827, 19158, -11095, 22229, -27979, 19091, -27355, -9579, 22190, 21079, -18779, 23223, 21654, 27221, 4444, -23535, -16662, 5567, -22268, -1111, 17776, -28603, 8331, 29985, -21001, 2222, -8888, -18467, -32213, -11134, -17040, -28739, 1065, -10492, -23569, 4260, -2623, 16118, 32236, 5246, -18399, -8520, -31457, -8059, -2130, 20984, 26021, 23398, 18854, 23114, -26919, 9879, -26990, 28055, -9427, -11557, -11699, -19758, 13495, 18741, 27829, 19309, 12819, -4814, 11487, 8493, 31565, -19589, -14261, -19256, 27025, 28522, 2407, -26359, -25638, 9628, -22974, -16986, -16010, -30271, 25577, 5988, -23952, -28766, 1497, 9990, 19980, -2994, -17633, -8005, 32020, -4995, 14383, -11976, 33, -8448, 4094, 528, -2112, 16376, 132, 31745, -2047, -264, 4224, -32752, -66, 16896, -8188, -1056, 16830, 16962, -9244, 7132, -28528, 28561, 1783, 2311, 4622, -3566, -8481, 8415, 31877, 31613, 18488, -14264, 11248, 4140, -703, -16643, 1035, -2812, -20545, 16560, -32417, -24447, -2070, 5624, -22496, -8280, 1406, -32251, -30776, 14216, -30845, 31880, 3554, 7694, 7970, -8673, -17346, -15940, -7108, -15388, -3985, -28432, -3847, 1777, -18612, -19529, -15221, 29893, 11502, 4653, -8911, -12579, -25158, 17822, -23004, -9306, -28313, -26479, 30442, 5751, 10745, 1834, -29344, -24691, -32310, 13698, -22557, 7336, 14672, -20423, -917, -27396, -21490, -3668, -6849, -16155, 13217, 24372, 3270, 14861, 6093, 13080, -12669, 31951, -1635, 25338, -12186, -26160, -26434, 16793, -6540, -29722, -9641, -22310, 29275, -23182, 27191, -13974, 26973, -23703, 18131, 11591, 11155, 27948, 19282, -20917, 6987, -19173, 9804, -19418, -16997, 25790, 27914, -2451, -26321, -12135, -24270, -12895, 9709, 4902, -19608, -26701, -31543, 13957, 19228, -7093, -17586, -20037, 14611, -4807, 11375, -28372, 8793, -22750, -29222, 9614, 27081, 14186, -30365, -25463, -30498, 8585, -6286, -29209, -14238, -25144, 9082, -31197, 3143, -18164, 28476, -15249, -4541, -17170, 12572, -7119, -21711, -12629, 5453, -19691, 13227, 21812, -21307, 15021, 30042, -22923, -26454, 21913, -22115, 25258, -10906, -26155, -24348, 7073, 17906, 3654, -14616, 6087, -31855, 28292, -8953, -1827, 29232, -12174, -16841, -14146, 29725, -7308, -30987, 2695, 22417, 28504, 17058, 24131, 7126, 10780, 21560, -14252, 31421, 17275, -3563, -5390, 20703, 8529, 30178, 7798, 6306, 24089, -30819, 25224, -10362, 31192, -3153, 20724, -3899, 15089, 5181, -15596, -12612, 17359, -10415, -20777, 4747, 29971, 11190, 18988, 23877, -17571, 30395, 17783, -22380, 27561, 20830, -23983, -9494, 5595, -29600, -24692, 1850, -14841, -6173, 7400, 12674, 32306, -925, -25348, 12346, -14800, -6337, -16153, -3700, 29682, -22490, -9816, 25982, -32155, -2454, -27146, -24423, 26273, -12991, -16691, 4908, -11245, -20557, 19632, 13573, -1227, -6347, -13593, 20877, 29522, 12986, 17971, -25388, 11165, 22330, -14761, -25972, 29595, 12694, 27186, 23783, 6493, -25657, 14492, 30276, -17290, 3623, -9970, 28446, -7569, -15138, 8645, -7246, 19940, -14223, -28984, 4985, -30957, -17535, 32444, 5192, -18412, 8111, 20768, -4603, -1298, -2596, 9206, -16222, 24001, -30467, 649, -10384, -28713, -29818, 31116, 26440, -18329, 7779, -25314, 11802, -6610, -13220, -23604, -15558, -14909, -5901, 3305, 12657, -28879, -24827, -1377, 22032, -4010, 16040, 22591, 31766, -5508, -11016, 2005, -32080, 20355, -15883, 2754, 21473, 8020, -13129, 18637, 29493, -13453, -11725, -13102, 13021, 9011, 18022, -26042, 23450, 26204, 26258, 28263, 6551, 26906, -5975, 22249, -28299, -30063, -10822, 17878, -23900, 23459, -18619, -17737, 21644, 29781, 11950, 21039, -8939, -5411, -32548, 9089, -14350, 3528, -14112, 8137, 882, -29181, 7175, -1764, 28224, -16274, -441, -18178, 28700, -7056, 14937, -22726, -29606, -23156, 27087, 12650, -5789, -25367, 14803, 11578, 11363, -25300, -29874, -20085, -6325, -19225, 15578, 9789, -25550, -12900, -13937, 28874, -3225, -26381, 12775, 6450, 27874, 7789, -31156, -19578, -14437, 25800, 27513, -30869, -30392, -18551, 8667, 9506, -21022, 7598, 15196, -23493, -17334, -19012, 10511, -3799, -4753, -28435, 6712, -14310, 32349, -23682, 29191, -1678, 26848, 8297, 16594, 11841, 7155, 3356, -13424, 28620, 839, -18173, 29805, -27788, -14151, 18121, -6947, 8933, -11854, 19922, -25693, 23708, 13894, -17866, 5927, -9961, 28302, 29295, -4034, -15888, -7940, 993, -3972, -31760, -16136, 1985, 3970, 32272, 7944, -2017, 8068, 31776, 15880, -1986};
    constexpr static const I INVERSE_TWIDDLES = -64;

    constexpr static I reduce(I x) {
        return (x & 0xFFFF) - (x >> 16);
    }
};

// 2ยนโถ + 1
typedef IntegerRing<FermatRingParams> FermatRing;

}

#endif
